/**
 * ModalService v1.0.0
 * -----------------------------------------------------------------------------
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
 */
class ModalService {
    constructor(config = {}) {
        this.eventBus = config.eventBus || null;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        this.activeModal = null;
        this.modalHistory = [];
        this.modalStack = [];
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        this.createModalContainer();
        
        console.log('ü™ü ModalService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
        this.setupEventListeners();
        console.log('‚úÖ ModalService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    createModalContainer() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        let container = document.getElementById('modal-container');
        if (!container) {
            container = document.createElement('div');
            container.id = 'modal-container';
            container.className = 'modal-container';
            document.body.appendChild(container);
        }
        
        this.modalContainer = container;
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        if (this.eventBus) {
            this.eventBus.on('modal:show', this.showModal.bind(this));
            this.eventBus.on('modal:close', this.closeModal.bind(this));
            this.eventBus.on('modal:close_all', this.closeAllModals.bind(this));
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à–∏ Escape
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && this.activeModal) {
                this.closeModal();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—é
        this.modalContainer.addEventListener('click', (event) => {
            if (event.target === this.modalContainer) {
                this.closeModal();
            }
        });
    }
    
    /**
     * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    showModal(config) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if (this.activeModal) {
            this.closeModal();
        }
        
        const modalId = this.generateModalId();
        const modal = this.createModalElement(modalId, config);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.modalContainer.appendChild(modal);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.activeModal = {
            id: modalId,
            element: modal,
            config: config,
            timestamp: Date.now()
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫
        this.modalStack.push(this.activeModal);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        this.showWithAnimation(modal);
        
        console.log('ü™ü ModalService: –ü–æ–∫–∞–∑–∞–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ:', config.title);
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    createModalElement(id, config) {
        const modal = document.createElement('div');
        modal.id = id;
        modal.className = 'game-modal';
        modal.setAttribute('role', 'dialog');
        modal.setAttribute('aria-modal', 'true');
        modal.setAttribute('aria-labelledby', `${id}-title`);
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const content = this.createModalContent(id, config);
        modal.appendChild(content);
        
        return modal;
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    createModalContent(id, config) {
        const { title, content, type, actions = [] } = config;
        
        const modalContent = document.createElement('div');
        modalContent.className = `modal-content modal-${type || 'default'}`;
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        if (title) {
            const header = document.createElement('div');
            header.className = 'modal-header';
            
            const titleElement = document.createElement('h2');
            titleElement.id = `${id}-title`;
            titleElement.className = 'modal-title';
            titleElement.textContent = title;
            
            header.appendChild(titleElement);
            modalContent.appendChild(header);
        }
        
        // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ
        if (content) {
            const body = document.createElement('div');
            body.className = 'modal-body';
            
            const contentElement = document.createElement('div');
            contentElement.className = 'modal-text';
            contentElement.textContent = content;
            
            body.appendChild(contentElement);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
            this.addTypeSpecificContent(body, config);
            
            modalContent.appendChild(body);
        }
        
        // –î–µ–π—Å—Ç–≤–∏—è
        if (actions.length > 0) {
            const footer = document.createElement('div');
            footer.className = 'modal-footer';
            
            actions.forEach((action, index) => {
                const button = document.createElement('button');
                button.className = `modal-button modal-button-${action.type || 'primary'}`;
                button.textContent = action.text;
                
                if (action.type === 'disabled') {
                    button.disabled = true;
                }
                
                if (action.action) {
                    button.addEventListener('click', () => {
                        try {
                            action.action();
                        } catch (error) {
                            console.error('ü™ü ModalService: –û—à–∏–±–∫–∞ –≤ –¥–µ–π—Å—Ç–≤–∏–∏ –∫–Ω–æ–ø–∫–∏:', error);
                        }
                    });
                }
                
                footer.appendChild(button);
            });
            
            modalContent.appendChild(footer);
        }
        
        return modalContent;
    }
    
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –¥–ª—è —Ç–∏–ø–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
     */
    addTypeSpecificContent(body, config) {
        const { type } = config;
        
        switch (type) {
            case 'money':
                if (config.income) {
                    const incomeElement = document.createElement('div');
                    incomeElement.className = 'modal-income';
                    incomeElement.innerHTML = `<span class="income-amount">+$${config.income}</span>`;
                    body.appendChild(incomeElement);
                }
                break;
                
            case 'dream':
            case 'business':
                if (config.price) {
                    const priceElement = document.createElement('div');
                    priceElement.className = 'modal-price';
                    priceElement.innerHTML = `<span class="price-amount">$${config.price}</span>`;
                    body.appendChild(priceElement);
                }
                if (config.rent) {
                    const rentElement = document.createElement('div');
                    rentElement.className = 'modal-rent';
                    rentElement.innerHTML = `<span class="rent-amount">–î–æ—Ö–æ–¥: $${config.rent}/—Ö–æ–¥</span>`;
                    body.appendChild(rentElement);
                }
                break;
                
            case 'loss':
            case 'expense':
                if (config.expense) {
                    const expenseElement = document.createElement('div');
                    expenseElement.className = 'modal-expense';
                    expenseElement.innerHTML = `<span class="expense-amount">-$${Math.abs(config.expense)}</span>`;
                    body.appendChild(expenseElement);
                }
                break;
                
            case 'charity':
                if (config.donationAmount) {
                    const donationElement = document.createElement('div');
                    donationElement.className = 'modal-donation';
                    donationElement.innerHTML = `
                        <span class="donation-amount">$${config.donationAmount}</span>
                        <span class="donation-percent">(${config.donationPercent}% –æ—Ç –¥–æ—Ö–æ–¥–∞)</span>
                    `;
                    body.appendChild(donationElement);
                }
                break;
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
     */
    showWithAnimation(modal) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        modal.classList.add('modal-showing');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
        modal.offsetHeight;
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        modal.classList.add('modal-visible');
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
            modal.classList.remove('modal-showing');
        }, 300);
    }
    
    /**
     * –°–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
     */
    hideWithAnimation(modal) {
        modal.classList.add('modal-hiding');
        
        setTimeout(() => {
            if (modal.parentNode) {
                modal.parentNode.removeChild(modal);
            }
        }, 300);
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    closeModal() {
        if (!this.activeModal) {
            return;
        }
        
        const modal = this.activeModal;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        this.modalHistory.push(modal);
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ —Å—Ç–µ–∫–∞
        this.modalStack = this.modalStack.filter(m => m.id !== modal.id);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        this.hideWithAnimation(modal.element);
        
        // –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.activeModal = null;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –≤ —Å—Ç–µ–∫–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ
        if (this.modalStack.length > 0) {
            const nextModal = this.modalStack[this.modalStack.length - 1];
            this.activeModal = nextModal;
            this.showWithAnimation(nextModal.element);
        }
        
        console.log('ü™ü ModalService: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏
        if (this.eventBus) {
            this.eventBus.emit('modal:closed', modal.config);
        }
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    closeAllModals() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –≤ —Å—Ç–µ–∫–µ
        while (this.modalStack.length > 0) {
            this.closeModal();
        }
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.modalContainer.innerHTML = '';
        
        console.log('ü™ü ModalService: –í—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');
    }
    
    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    generateModalId() {
        return `modal_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–æ –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    isModalActive() {
        return this.activeModal !== null;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    getActiveModal() {
        return this.activeModal;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    getHistory() {
        return [...this.modalHistory];
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–µ–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    getStack() {
        return [...this.modalStack];
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof window !== 'undefined') {
    window.ModalService = ModalService;
}

if (typeof module !== 'undefined' && module.exports) {
    module.exports = ModalService;
}
