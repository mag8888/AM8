/**
 * BankPreview v1.0.0
 * -----------------------------------------------------------------------------
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—å—é –±–∞–Ω–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∫ –ø–æ–ª–Ω–æ–º—É –±–∞–Ω–∫—É.
 */

class BankPreview {
    constructor(config = {}) {
        this.containerSelector = config.containerSelector || '#card-decks-panel';
        this.eventBus = config.eventBus || null;
        this.gameStateManager = config.gameStateManager || null;
        this.bankModule = null;
        
        this.container = null;
        this.previewElement = null;
        
        // Callback –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ GameStateManager
        this._stateUpdatedCallback = null;
        
        // –§–ª–∞–≥–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
        this._eventListenersSetup = false;
        this._eventBusSubscribed = false;
        this._initialDataLoaded = false;
        this._isLoadingInitialData = false;
        this._lastExtractedData = null;
        this._lastExtractedTimestamp = 0;
        this._updateStateDebounceTimer = null;
        this._lastDisplayedData = null;
        
        // –ü–û–î–ü–ò–°–ö–ò –í –ö–û–ù–°–¢–†–£–ö–¢–û–†–ï - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        this._setupGameStateManagerSubscription();
        
        this.init();
    }
    
    /**
     * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ BankPreview
     */
    static getInstance(config = {}) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ window.app.modules
        if (window.app && window.app.modules && window.app.modules.get('bankPreview')) {
            const existingInstance = window.app.modules.get('bankPreview');
            console.log('üîÑ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä (—Å–∏–Ω–≥–ª—Ç–æ–Ω)');
            return existingInstance;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        const instance = new BankPreview(config);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ window.app.modules –¥–ª—è —Å–∏–Ω–≥–ª—Ç–æ–Ω –ø–æ–≤–µ–¥–µ–Ω–∏—è
        if (window.app && window.app.modules) {
            window.app.modules.set('bankPreview', instance);
            console.log('‚ú® BankPreview: –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ —Å–∏–Ω–≥–ª—Ç–æ–Ω');
        }
        
        return instance;
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ GameStateManager –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
     */
    _setupGameStateManagerSubscription() {
        if (this.gameStateManager && typeof this.gameStateManager.on === 'function' && !this._stateUpdatedCallback) {
            this._stateUpdatedCallback = (state) => {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º debounced –≤–µ—Ä—Å–∏—é –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞
                if (this._updateStateDebounceTimer) {
                    clearTimeout(this._updateStateDebounceTimer);
                }
                this._updateStateDebounceTimer = setTimeout(() => {
                    this.updatePreviewDataFromState(state);
                    this._updateStateDebounceTimer = null;
                }, 1000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 1 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–∏–≥–∞–Ω–∏—è
            };
            
            this.gameStateManager.on('state:updated', this._stateUpdatedCallback);
            console.log('üîÑ BankPreview: –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GameStateManager (–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä)');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –≤ GameStateManager –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ
            if (this.gameStateManager._state && this.gameStateManager._state.players) {
                console.log('üîÑ BankPreview: –ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–∞–∑—É');
                // –£–±–∏—Ä–∞–µ–º setTimeout —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                // setTimeout(() => {
                //     this.updatePreviewDataFromState(this.gameStateManager._state);
                // }, 100);
            }
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    init() {
        this.container = document.querySelector(this.containerSelector);
        
        if (!this.container) {
            console.warn('‚ö†Ô∏è BankPreview: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω:', this.containerSelector);
            return;
        }
        
        // –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ä–∞–∑—É –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        this.render();
        
        // setupEventListeners –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –≤ render()
        
        // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ GameStateManager
        // –õ–æ–∫–∞–ª—å–Ω—ã–µ setInterval —É–±—Ä–∞–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
        this.updateInterval = null;
        this.cleanupInterval = null;
        
        console.log('üîÑ BankPreview: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—É–¥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ GameStateManager');
        
        // Debounced –≤–µ—Ä—Å–∏—è updatePreviewData –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
        this.updatePreviewDataDebounced = null;
        if (window.CommonUtils && window.CommonUtils.debounce) {
            this.updatePreviewDataDebounced = window.CommonUtils.debounce(() => {
                this.updatePreviewData();
            }, 2000);
        }
        
        // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ (–µ—Å–ª–∏ CardDeckPanel –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ)
        this.observeContainer();
        
        console.log('üè¶ BankPreview: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –†–µ–Ω–¥–µ—Ä –ø—Ä–µ–≤—å—é –±–∞–Ω–∫–∞
     */
    render() {
        if (!this.container) return;
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–µ–≤—å—é –±–∞–Ω–∫–∞
        this.previewElement = document.createElement('div');
        this.previewElement.className = 'bank-preview-card';
        this.previewElement.innerHTML = `
            <div class="bank-preview-header">
                <div class="bank-preview-icon">üè¶</div>
                <div class="bank-preview-title">–ë–∞–Ω–∫</div>
                <div class="bank-preview-status">–ê–∫—Ç–∏–≤–µ–Ω</div>
            </div>
            
            <div class="bank-preview-balance">
                <div class="bank-preview-balance-amount" id="bank-preview-balance">$0</div>
                <div class="bank-preview-balance-label">–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π</div>
            </div>
            
            <div class="bank-preview-summary">
                <div class="bank-preview-item">
                    <span class="bank-preview-item-icon">üìà</span>
                    <span class="bank-preview-item-label">–î–æ—Ö–æ–¥:</span>
                    <span class="bank-preview-item-value" id="bank-preview-income">$0</span>
                </div>
                <div class="bank-preview-item">
                    <span class="bank-preview-item-icon">üìâ</span>
                    <span class="bank-preview-item-label">–†–∞—Å—Ö–æ–¥—ã:</span>
                    <span class="bank-preview-item-value" id="bank-preview-expenses">$0</span>
                </div>
                <div class="bank-preview-item">
                    <span class="bank-preview-item-icon">üíé</span>
                    <span class="bank-preview-item-label">–ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥:</span>
                    <span class="bank-preview-item-value" id="bank-preview-net-income">$0/–º–µ—Å</span>
                </div>
            </div>
            
            <div class="bank-preview-credit">
                <div class="bank-preview-item">
                    <span class="bank-preview-item-icon">üí≥</span>
                    <span class="bank-preview-item-label">–ö—Ä–µ–¥–∏—Ç:</span>
                    <span class="bank-preview-item-value" id="bank-preview-credit">$0</span>
                </div>
                <div class="bank-preview-item">
                    <span class="bank-preview-item-label">–ú–∞–∫—Å. –∫—Ä–µ–¥–∏—Ç:</span>
                    <span class="bank-preview-item-value" id="bank-preview-max-credit">$0</span>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
        this.addStyles();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±–∞–Ω–∫ –ø—Ä–µ–≤—å—é –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        const existingPreview = this.container.querySelector('.bank-preview-card');
        if (existingPreview) {
            existingPreview.remove();
        }
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –≤ –Ω–∞—á–∞–ª–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        this.container.insertBefore(this.previewElement, this.container.firstChild);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
        this.setupEventListeners();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–≤—å—é
        this.loadInitialData();
        
        // –£–±–∏—Ä–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π setTimeout –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –º–∏–≥–∞–Ω–∏–µ
        // setTimeout(() => {
        //     this.updatePreviewData();
        // }, 500);
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å—Ä–∞–∑—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–≤—å—é
     */
    loadInitialData() {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
        if (this._initialDataLoaded || this._isLoadingInitialData) {
            return;
        }
        
        this._isLoadingInitialData = true;
        console.log('üè¶ BankPreview: –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        
        try {
            // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ BankModuleServer
            const app = window.app;
            if (app && app.modules) {
                this.bankModule = app.modules.get('bankModuleServer') || app.modules.get('bankModule');
            }
            
            let bankData = null;
            
            // –ü–†–ò–û–†–ò–¢–ï–¢ 1: GameStateManager (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã)
            if (this.gameStateManager && this.gameStateManager._state && this.gameStateManager._state.players && this.gameStateManager._state.players.length > 0) {
                bankData = this.extractBankDataFromGameState(this.gameStateManager._state);
                // console.log('‚úÖ BankPreview: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ GameStateManager (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)');
            } 
            // –ü–†–ò–û–†–ò–¢–ï–¢ 2: BankModule (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ –Ω—É–ª–∏)
            else if (this.bankModule && this.bankModule.bankState && this.bankModule.bankState.balance > 0) {
                bankData = this.bankModule.bankState;
                console.log('‚úÖ BankPreview: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ BankModule (–Ω–µ –Ω—É–ª–µ–≤—ã–µ)');
            } 
            // –ü–†–ò–û–†–ò–¢–ï–¢ 3: Fallback –¥–∞–Ω–Ω—ã–µ
            else {
                bankData = this.getFallbackBankData();
                console.log('üîÑ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            }
            
            if (bankData && this.previewElement) {
                this.updatePreviewUI(bankData);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è BankPreview: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –¥–∞–Ω–Ω—ã–µ
            const fallbackData = this.getFallbackBankData();
            if (this.previewElement) {
                this.updatePreviewUI(fallbackData);
            }
        } finally {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏
            this._isLoadingInitialData = false;
            this._initialDataLoaded = true;
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        if (!this.previewElement || this._eventListenersSetup) return;
        
        // –ö–ª–∏–∫ –ø–æ –ø—Ä–µ–≤—å—é –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±–∞–Ω–∫
        this.previewElement.addEventListener('click', (e) => {
            e.preventDefault();
            this.openBank();
        });
        
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
        this._eventListenersSetup = true;
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –±–∞–Ω–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å eventBus (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
        if (this.eventBus && !this._eventBusSubscribed) {
            this.eventBus.on('bank:updated', () => {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º debounced –≤–µ—Ä—Å–∏—é –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞
                if (this.updatePreviewDataDebounced) {
                    this.updatePreviewDataDebounced();
                } else {
                    this.updatePreviewData();
                }
            });
            
            // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –ø—Ä–µ–≤—å—é (—É–±—Ä–∞–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞)
            this.eventBus.on('cards:updated', () => {
                requestAnimationFrame(() => {
                    this.render();
                });
            });
            
            this._eventBusSubscribed = true;
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞
     */
    openBank() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–Ω–∫ –∏–∑ window.app –∏–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ DOM
            const app = window.app;
            if (app && app.modules) {
                this.bankModule = app.modules.get('bankModuleServer') || app.modules.get('bankModule');
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ app, –∏—â–µ–º —á–µ—Ä–µ–∑ PlayersPanel
            if (!this.bankModule) {
                const playersPanel = document.querySelector('#players-panel');
                if (playersPanel && playersPanel._playersPanelInstance) {
                    this.bankModule = playersPanel._playersPanelInstance.bankModule;
                }
            }
            
            if (this.bankModule && typeof this.bankModule.open === 'function') {
                // –ù–ï –¥–µ–ª–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±–∞–Ω–∫–∞
                // BankModuleServer —Å–∞–º –∑–∞–≥—Ä—É–∑–∏—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
                this.bankModule.open();
                console.log('üè¶ BankPreview: –ë–∞–Ω–∫ –æ—Ç–∫—Ä—ã—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ)');
            } else {
                console.warn('‚ö†Ô∏è BankPreview: BankModule –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è');
            }
        } catch (error) {
            console.error('‚ùå BankPreview: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–∞–Ω–∫–∞:', error);
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é friendly —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏
            if (window.showNotification) {
                window.showNotification('–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ', 'warning');
            }
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–≤—å—é
     */
    async updatePreviewData() {
        if (!this.previewElement) return;
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
        if (this._isUpdating) {
            return;
        }
        
        this._isUpdating = true;
        
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ BankModuleServer
            let bankData = null;
            
            // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥—É–ª—å –±–∞–Ω–∫–∞
            const app = window.app;
            if (app && app.modules) {
                this.bankModule = app.modules.get('bankModuleServer') || app.modules.get('bankModule');
            }
            
            // –ü–†–ò–û–†–ò–¢–ï–¢ 1: GameStateManager (–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã)
            if (this.gameStateManager && this.gameStateManager._state && this.gameStateManager._state.players && this.gameStateManager._state.players.length > 0) {
                bankData = this.extractBankDataFromGameState(this.gameStateManager._state);
                // console.log('‚úÖ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ GameStateManager (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)');
            } 
            // –ü–†–ò–û–†–ò–¢–ï–¢ 2: BankModule (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ –Ω—É–ª–∏)
            else if (this.bankModule && this.bankModule.bankState && this.bankModule.bankState.balance > 0) {
                bankData = this.bankModule.bankState;
                // console.log('‚úÖ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ BankModule (–Ω–µ –Ω—É–ª–µ–≤—ã–µ)');
            } 
            // –ü–†–ò–û–†–ò–¢–ï–¢ 3: Fallback –¥–∞–Ω–Ω—ã–µ
            else {
                // console.log('üîÑ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ (–±–µ–∑ API –∑–∞–ø—Ä–æ—Å–æ–≤)');
                bankData = this.getFallbackBankData();
            }
            
            if (bankData) {
                this.updatePreviewUI(bankData);
            } else {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –Ω—É–ª–µ–π
                console.log('üîÑ BankPreview: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                this.updatePreviewUI(this.getFallbackBankData());
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è BankPreview: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ
            this.updatePreviewUI(this.getFallbackBankData());
        } finally {
            this._isUpdating = false;
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–≤—å—é –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤)
     */
    updatePreviewDataFromState(state) {
        if (!this.previewElement || this._isUpdating) return;
        
        this._isUpdating = true;
        
        try {
            let bankData = null;
            
            // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ BankModuleServer
            const app = window.app;
            if (app && app.modules) {
                this.bankModule = app.modules.get('bankModuleServer') || app.modules.get('bankModule');
            }
            
            if (this.bankModule && this.bankModule.bankState) {
                bankData = this.bankModule.bankState;
                // console.log('‚úÖ BankPreview: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ BankModule');
            } else if (state && state.players) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                bankData = this.extractBankDataFromGameState(state);
                // console.log('‚úÖ BankPreview: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
            }
            
            if (bankData) {
                this.updatePreviewUI(bankData);
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
                this.updatePreviewUI({
                    balance: 0,
                    income: 0,
                    expenses: 0,
                    netIncome: 0,
                    credit: 0,
                    maxCredit: 0
                });
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è BankPreview: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error);
        } finally {
            this._isUpdating = false;
        }
    }

    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
     */
    extractBankDataFromGameState(gameState) {
        // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
        const now = Date.now();
        if (this._lastExtractedData && (now - this._lastExtractedTimestamp) < 1000) {
            // console.log('üöÄ BankPreview: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ extractBankDataFromGameState');
            return this._lastExtractedData;
        }
        
        const currentUser = this.getCurrentUser();
        // –£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ø–∞–º–∞
        // console.log('üîç BankPreview: extractBankDataFromGameState - currentUser:', currentUser);
        // console.log('üîç BankPreview: extractBankDataFromGameState - gameState.players:', gameState.players?.length);
        
        if (!currentUser || !gameState.players) {
            console.warn('‚ö†Ô∏è BankPreview: –ù–µ—Ç currentUser –∏–ª–∏ players –≤ gameState');
            return null;
        }
        
        const currentPlayer = gameState.players.find(p => 
            p.id === currentUser.id || 
            p.userId === currentUser.id || 
            p.username === currentUser.username
        );
        
        // console.log('üîç BankPreview: –ù–∞–π–¥–µ–Ω–Ω—ã–π currentPlayer:', currentPlayer);
        
        if (!currentPlayer) {
            console.warn('‚ö†Ô∏è BankPreview: currentPlayer –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ gameState.players');
            return null;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å —Å fallback –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
        let balance = (currentPlayer.money !== undefined && currentPlayer.money !== null) 
            ? currentPlayer.money 
            : ((currentPlayer.balance !== undefined && currentPlayer.balance !== null) 
                ? currentPlayer.balance 
                : 5000); // fallback —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è undefined/null
        
        // –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å 0, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 5000
        if (balance === 0) {
            balance = 5000;
            console.log('üí∞ BankPreview: –ë–∞–ª–∞–Ω—Å –±—ã–ª 0, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 5000');
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å
        let bankData;
        if (currentPlayer.profession === '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å' || !currentPlayer.profession) {
            bankData = {
                balance: balance,
                income: 10000,
                expenses: 6200,
                netIncome: 3800,
                credit: currentPlayer.currentLoan || 0,
                maxCredit: 38000
            };
        } else {
            // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –¥–∞–Ω–Ω—ã–µ
            bankData = {
                balance: balance,
                income: currentPlayer.totalIncome || currentPlayer.salary || 5000,
                expenses: currentPlayer.monthlyExpenses || 2000,
                netIncome: (currentPlayer.totalIncome || currentPlayer.salary || 5000) - (currentPlayer.monthlyExpenses || 2000),
                credit: currentPlayer.currentLoan || 0,
                maxCredit: Math.max(((currentPlayer.totalIncome || currentPlayer.salary || 5000) - (currentPlayer.monthlyExpenses || 2000)) * 10, 0)
            };
        }
        
        // console.log('üí∞ BankPreview: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–∞:', bankData);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        this._lastExtractedData = bankData;
        this._lastExtractedTimestamp = Date.now();
        
        return bankData;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ fallback –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞
     */
    getFallbackBankData() {
        const currentUser = this.getCurrentUser();
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è
        return {
            balance: 5000, // –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
            income: 10000,
            expenses: 6200,
            netIncome: 3800,
            credit: 0,
            maxCredit: 38000
        };
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø—Ä–µ–≤—å—é
     */
    updatePreviewUI(bankData) {
        if (!this.previewElement || !bankData) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ - –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–∏–≥–∞–Ω–∏–µ UI
        const dataString = JSON.stringify({
            balance: bankData.balance || 0,
            income: bankData.income || 0,
            expenses: bankData.expenses || 0,
            netIncome: bankData.netIncome || 0,
            credit: bankData.credit || 0,
            maxCredit: bankData.maxCredit || 0
        });
        
        if (this._lastDisplayedData === dataString) {
            // –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
            return;
        }
        
        this._lastDisplayedData = dataString;
        
        const updateElement = (id, value) => {
            const element = this.previewElement.querySelector(id);
            if (element) {
                element.textContent = typeof value === 'number' ? `$${this.formatNumber(value)}` : value;
            }
        };
        
        updateElement('#bank-preview-balance', bankData.balance || 0);
        updateElement('#bank-preview-income', bankData.income || 0);
        updateElement('#bank-preview-expenses', bankData.expenses || 0);
        updateElement('#bank-preview-net-income', `${bankData.netIncome || 0}/–º–µ—Å`);
        updateElement('#bank-preview-credit', bankData.credit || 0);
        updateElement('#bank-preview-max-credit', bankData.maxCredit || 0);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∫—Ä–µ–¥–∏—Ç–∞
        const creditElement = this.previewElement.querySelector('#bank-preview-credit');
        if (creditElement) {
            creditElement.style.color = (bankData.credit || 0) > 0 ? '#ef4444' : '#10b981';
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–µ–∫—É—â–µ–π –∫–æ–º–Ω–∞—Ç—ã
     */
    getCurrentRoomId() {
        const hash = window.location.hash;
        const match = hash.match(/roomId=([^&]+)/);
        return match ? match[1] : null;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getCurrentUser() {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ sessionStorage
            const bundleRaw = sessionStorage.getItem('am_player_bundle');
            if (bundleRaw) {
                const bundle = JSON.parse(bundleRaw);
                if (bundle.userId || bundle.id || bundle.username) {
                    return {
                        id: bundle.userId || bundle.id,
                        username: bundle.username || bundle.currentUser?.username
                    };
                }
            }
            
            // Fallback: localStorage
            const userData = localStorage.getItem('currentUser');
            if (userData) {
                return JSON.parse(userData);
            }
            
            return null;
        } catch (error) {
            console.warn('‚ö†Ô∏è BankPreview: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return null;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª
     */
    formatNumber(num) {
        if (typeof num !== 'number') return '0';
        return new Intl.NumberFormat('ru-RU').format(Math.floor(num));
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π
     */
    addStyles() {
        if (document.getElementById('bank-preview-styles')) return;
        
        const styles = document.createElement('style');
        styles.id = 'bank-preview-styles';
        styles.textContent = `
            .bank-preview-card {
                background: linear-gradient(145deg, rgba(20, 25, 40, 0.95), rgba(15, 20, 35, 0.95));
                border-radius: 1rem;
                padding: 1rem;
                margin-bottom: 1rem;
                border: 2px solid rgba(99, 102, 241, 0.3);
                backdrop-filter: blur(20px);
                color: #ffffff;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
            }
            
            .bank-preview-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 35px rgba(99, 102, 241, 0.4);
                border-color: rgba(99, 102, 241, 0.5);
            }
            
            .bank-preview-header {
                display: flex;
                align-items: center;
                justify-content: space-between;
                margin-bottom: 1rem;
            }
            
            .bank-preview-icon {
                font-size: 1.5rem;
            }
            
            .bank-preview-title {
                font-size: 1.1rem;
                font-weight: 600;
                color: #ffffff;
                flex: 1;
                margin-left: 0.5rem;
            }
            
            .bank-preview-status {
                background: rgba(34, 197, 94, 0.2);
                color: #10b981;
                padding: 0.25rem 0.5rem;
                border-radius: 0.5rem;
                font-size: 0.75rem;
                font-weight: 500;
            }
            
            .bank-preview-balance {
                text-align: center;
                margin-bottom: 1rem;
            }
            
            .bank-preview-balance-amount {
                font-size: 2rem;
                font-weight: 700;
                color: #10b981;
                line-height: 1;
            }
            
            .bank-preview-balance-label {
                font-size: 0.8rem;
                color: #a0a0a0;
                margin-top: 0.25rem;
            }
            
            .bank-preview-summary,
            .bank-preview-credit {
                background: rgba(255, 255, 255, 0.05);
                border-radius: 0.5rem;
                padding: 0.75rem;
                margin-bottom: 0.5rem;
            }
            
            .bank-preview-item {
                display: flex;
                align-items: center;
                justify-content: space-between;
                margin-bottom: 0.5rem;
                font-size: 0.85rem;
            }
            
            .bank-preview-item:last-child {
                margin-bottom: 0;
            }
            
            .bank-preview-item-icon {
                margin-right: 0.5rem;
            }
            
            .bank-preview-item-label {
                color: #a0a0a0;
                flex: 1;
            }
            
            .bank-preview-item-value {
                color: #ffffff;
                font-weight: 600;
            }
        `;
        
        document.head.appendChild(styles);
    }

    /**
     * –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
     */
    observeContainer() {
        if (!this.container || !this.container.parentNode) return;
        
        // Debounce –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
        this.renderDebounceTimer = null;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        this.observer = new MutationObserver((mutations) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
            const hasChildListChanges = mutations.some(mutation => mutation.type === 'childList');
            if (!hasChildListChanges) return;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–¥–∞–ª–∏–ª–∏ –ª–∏ –Ω–∞—à —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–µ–≤—å—é
            const hasPreview = this.container.querySelector('.bank-preview-card');
            if (!hasPreview && this.previewElement) {
                // Debounce –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —Å requestAnimationFrame –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                if (this.renderDebounceTimer) {
                    cancelAnimationFrame(this.renderDebounceTimer);
                }
                this.renderDebounceTimer = requestAnimationFrame(() => {
                    this.render();
                    this.renderDebounceTimer = null;
                });
            }
        });
        
        this.observer.observe(this.container, {
            childList: true,
            subtree: false,
            attributes: false // –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        });
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    destroy() {
        // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (–µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã)
        if (this.updateInterval) {
            clearInterval(this.updateInterval);
            this.updateInterval = null;
        }
        
        if (this.cleanupInterval) {
            clearInterval(this.cleanupInterval);
            this.cleanupInterval = null;
        }
        
        // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç GameStateManager
        if (this.gameStateManager && typeof this.gameStateManager.off === 'function' && this._stateUpdatedCallback) {
            this.gameStateManager.off('state:updated', this._stateUpdatedCallback);
        }
        
        if (this.renderDebounceTimer) {
            clearTimeout(this.renderDebounceTimer);
        }
        
        if (this._updateStateDebounceTimer) {
            clearTimeout(this._updateStateDebounceTimer);
            this._updateStateDebounceTimer = null;
        }
        
        if (this.observer) {
            this.observer.disconnect();
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        this._isUpdating = false;
        
        // –°–ë–†–û–° –§–õ–ê–ì–û–í –î–õ–Ø –ö–û–ù–¢–†–û–õ–ò–†–£–ï–ú–û–ô –†–ï–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
        this._eventListenersSetup = false;
        this._eventBusSubscribed = false;
        this._stateUpdatedCallback = null;
        
        if (this.previewElement && this.previewElement.parentNode) {
            this.previewElement.parentNode.removeChild(this.previewElement);
        }
        
        console.log('üè¶ BankPreview: –£–Ω–∏—á—Ç–æ–∂–µ–Ω (—Ñ–ª–∞–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è —Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof window !== 'undefined') {
    window.BankPreview = BankPreview;
}

if (typeof module !== 'undefined' && module.exports) {
    module.exports = BankPreview;
}
