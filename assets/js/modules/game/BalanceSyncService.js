/**
 * BalanceSyncService v1.0.0
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤ –∏–≥—Ä–æ–∫–æ–≤
 */

class BalanceSyncService {
    constructor(config = {}) {
        this.gameState = config.gameState || null;
        this.eventBus = config.eventBus || null;
        this.bankApi = config.bankApi || null;
        this.roomId = null;
        this.syncInterval = null;
        this.isSyncing = false;
        
        this.setupEventListeners();
        console.log('üîÑ BalanceSyncService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        if (!this.eventBus) return;
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        this.eventBus.on('bank:transfer', (data) => {
            this.handleTransferEvent(data);
        });
        
        // –°–ª—É—à–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
        this.eventBus.on('players:updated', (data) => {
            this.handlePlayersUpdate(data);
        });
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã
        this.eventBus.on('room:joined', (data) => {
            this.handleRoomJoined(data);
        });
        
        console.log('üîÑ BalanceSyncService: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    handleTransferEvent(data) {
        console.log('üîÑ BalanceSyncService: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞:', data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI –±–∞–ª–∞–Ω—Å–æ–≤
        this.updateBalanceDisplays();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–æ–º
        if (this.roomId) {
            this.syncBalances();
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
     */
    handlePlayersUpdate(data) {
        console.log('üîÑ BalanceSyncService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤:', data);
        this.updateBalanceDisplays();
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ
     */
    handleRoomJoined(data) {
        this.roomId = data.roomId;
        console.log('üîÑ BalanceSyncService: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ:', this.roomId);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        this.startPeriodicSync();
        
        // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        this.syncBalances();
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    startPeriodicSync() {
        if (this.syncInterval) {
            clearInterval(this.syncInterval);
        }
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        this.syncInterval = setInterval(() => {
            this.syncBalances();
        }, 5000);
        
        console.log('üîÑ BalanceSyncService: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞');
    }
    
    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    stopPeriodicSync() {
        if (this.syncInterval) {
            clearInterval(this.syncInterval);
            this.syncInterval = null;
        }
        
        console.log('üîÑ BalanceSyncService: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }
    
    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
     */
    async syncBalances() {
        if (this.isSyncing || !this.roomId || !this.bankApi) {
            return;
        }
        
        this.isSyncing = true;
        
        try {
            const response = await this.bankApi.syncBankData(this.roomId);
            
            if (response && response.balances) {
                this.updateLocalBalances(response.balances);
                console.log('üîÑ BalanceSyncService: –ë–∞–ª–∞–Ω—Å—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            }
        } catch (error) {
            console.error('‚ùå BalanceSyncService: –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        } finally {
            this.isSyncing = false;
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –∏–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    updateLocalBalances(serverBalances) {
        if (!this.gameState) return;
        
        const players = this.gameState.getPlayers();
        let hasChanges = false;
        
        players.forEach(player => {
            const serverBalance = serverBalances[player.id];
            if (serverBalance !== undefined && player.money !== serverBalance) {
                console.log(`üîÑ BalanceSyncService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ${player.id}: ${player.money} -> ${serverBalance}`);
                player.money = serverBalance;
                hasChanges = true;
            }
        });
        
        if (hasChanges) {
            // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è UI
            if (this.eventBus) {
                this.eventBus.emit('players:balancesUpdated', { players });
            }
            
            this.updateBalanceDisplays();
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –≤ UI
     */
    updateBalanceDisplays() {
        if (!this.gameState) return;
        
        const players = this.gameState.getPlayers();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –≤ PlayersPanel
        players.forEach(player => {
            this.updatePlayerCardBalance(player);
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ BankModule –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
        this.updateBankModuleBalance();
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –∏–≥—Ä–æ–∫–∞
     */
    updatePlayerCardBalance(player) {
        // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–≥—Ä–æ–∫–∞
        const playerCard = document.querySelector(`[data-player-id="${player.id}"]`);
        if (!playerCard) return;
        
        // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –±–∞–ª–∞–Ω—Å–∞
        const balanceElement = playerCard.querySelector('.player-balance');
        if (!balanceElement) return;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –±–∞–ª–∞–Ω—Å–∞
        const formattedBalance = this.formatNumber(player.money || 0);
        balanceElement.textContent = `üí∞ $${formattedBalance}`;
        
        console.log(`üí∞ BalanceSyncService: –û–±–Ω–æ–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ ${player.id}: $${formattedBalance}`);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ –±–∞–Ω–∫ –º–æ–¥—É–ª–µ
     */
    updateBankModuleBalance() {
        const bankModule = window.app?.getModule?.('bankModule');
        if (bankModule && typeof bankModule.updateBankData === 'function') {
            bankModule.updateBankData();
        }
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª
     */
    formatNumber(num) {
        return new Intl.NumberFormat('ru-RU').format(num);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
     */
    getPlayerBalance(playerId) {
        if (!this.gameState) return 0;
        
        const player = this.gameState.getPlayers().find(p => p.id === playerId);
        return player ? (player.money || 0) : 0;
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
     */
    setPlayerBalance(playerId, balance) {
        if (!this.gameState) return false;
        
        const player = this.gameState.getPlayers().find(p => p.id === playerId);
        if (player) {
            player.money = balance;
            this.updatePlayerCardBalance(player);
            return true;
        }
        
        return false;
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        this.stopPeriodicSync();
        
        if (this.eventBus) {
            this.eventBus.off('bank:transfer');
            this.eventBus.off('players:updated');
            this.eventBus.off('room:joined');
        }
        
        console.log('üîÑ BalanceSyncService: –£–Ω–∏—á—Ç–æ–∂–µ–Ω');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.BalanceSyncService = BalanceSyncService;
