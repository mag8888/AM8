/**
 * Router v1.0.0
 * –°–∏—Å—Ç–µ–º–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 */
class Router {
    constructor() {
        this.routes = new Map();
        this.currentRoute = null;
        this.defaultRoute = '/';
        this.container = null;
        
        // –ü—Ä–∏–≤—è–∑–∫–∞ –º–µ—Ç–æ–¥–æ–≤
        this.boundHandlePopState = this.handlePopState.bind(this);
        
        console.log('üó∫Ô∏è Router: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏');
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
     */
    init() {
        // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
        this.container = document.getElementById('page-container') || document.body;
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        window.addEventListener('popstate', this.boundHandlePopState);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π URL —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã
        setTimeout(() => {
            if (this.routes.size > 0) {
                this.handleCurrentRoute();
            }
        }, 100);
        
        console.log('‚úÖ Router: –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {string} path - –ü—É—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {Function} handler - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    route(path, handler, title = '') {
        this.routes.set(path, {
            handler,
            title,
            path
        });
        
        console.log(`üó∫Ô∏è Router: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –º–∞—Ä—à—Ä—É—Ç ${path}`);
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç
     * @param {string} path - –ü—É—Ç—å –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
     * @param {Object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
     */
    navigate(path, state = {}) {
        console.log(`üó∫Ô∏è Router: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ${path}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
        if (!this.routes.has(path)) {
            console.error(`‚ùå Router: –ú–∞—Ä—à—Ä—É—Ç ${path} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
            if (path !== this.defaultRoute && this.routes.has(this.defaultRoute)) {
                this.navigate(this.defaultRoute);
            } else {
                console.error(`‚ùå Router: Default –º–∞—Ä—à—Ä—É—Ç ${this.defaultRoute} —Ç–∞–∫–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            }
            return;
        }

        const route = this.routes.get(path);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const url = path === '/' ? '/' : path;
        window.history.pushState({ ...state, route: path }, route.title, url);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥
        this.executeRoute(path, state);
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {string} path - –ü—É—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {Object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ
     */
    executeRoute(path, state = {}) {
        const route = this.routes.get(path);
        if (!route) {
            console.error(`‚ùå Router: –ú–∞—Ä—à—Ä—É—Ç ${path} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return;
        }

        this.currentRoute = path;
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
        const urlParams = this.getParams(path);
        const routeState = { ...state, ...urlParams };
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if (route.title) {
            document.title = `${route.title} - Aura Money`;
        }

        // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞—Ä—à—Ä—É—Ç–∞
        try {
            route.handler(routeState);
            console.log(`‚úÖ Router: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ${path} –≤—ã–ø–æ–ª–Ω–µ–Ω`);
        } catch (error) {
            console.error(`‚ùå Router: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ ${path}:`, error);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
     * @param {PopStateEvent} event
     */
    handlePopState(event) {
        const state = event.state || {};
        const path = state.route || this.getCurrentPath();
        
        console.log(`üó∫Ô∏è Router: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ - ${path}`);
        this.executeRoute(path, state);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—É—Ç–∏
     * @returns {string}
     */
    getCurrentPath() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–µ—à –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Ç–∏–ø–∞ #game
        const hash = window.location.hash;
        if (hash) {
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å –∏–∑ —Ö–µ—à–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, #game?roomId=123 -> /game)
            const hashPath = hash.split('?')[0].substring(1); // —É–±–∏—Ä–∞–µ–º #
            if (hashPath && this.routes.has('/' + hashPath)) {
                return '/' + hashPath;
            }
        }
        
        const path = window.location.pathname;
        return path === '/' ? this.defaultRoute : path;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
     */
    handleCurrentRoute() {
        const currentPath = this.getCurrentPath();
        
        // –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ default
        if (!this.routes.has(currentPath)) {
            console.log(`üó∫Ô∏è Router: –ú–∞—Ä—à—Ä—É—Ç ${currentPath} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ${this.defaultRoute}`);
            
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
            if (this.routes.has(this.defaultRoute)) {
                this.navigate(this.defaultRoute);
            } else {
                console.error(`‚ùå Router: Default –º–∞—Ä—à—Ä—É—Ç ${this.defaultRoute} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω`);
                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            }
            return;
        }

        this.executeRoute(currentPath);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
     * @returns {string}
     */
    getCurrentRoute() {
        return this.currentRoute;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {string} path
     * @returns {boolean}
     */
    isActiveRoute(path) {
        return this.currentRoute === path;
    }

    /**
     * –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
     * @param {string} path
     * @param {Object} state
     */
    replace(path, state = {}) {
        console.log(`üó∫Ô∏è Router: –ó–∞–º–µ–Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ ${path}`);
        
        if (!this.routes.has(path)) {
            console.error(`‚ùå Router: –ú–∞—Ä—à—Ä—É—Ç ${path} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return;
        }

        const route = this.routes.get(path);
        window.history.replaceState({ ...state, route: path }, route.title, path);
        this.executeRoute(path, state);
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    clearContainer() {
        if (this.container) {
            this.container.innerHTML = '';
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ URL
     * @param {string} path
     * @returns {Object}
     */
    getParams(path) {
        const params = {};
        const url = new URL(window.location.href);
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã query string
        url.searchParams.forEach((value, key) => {
            params[key] = value;
        });
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ö–µ—à–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, #game?roomId=123)
        const hash = window.location.hash;
        if (hash && hash.includes('?')) {
            const hashParams = hash.split('?')[1];
            const hashUrlParams = new URLSearchParams(hashParams);
            for (const [key, value] of hashUrlParams) {
                params[key] = value;
            }
        }
        
        return params;
    }

    /**
     * –†–∞–∑—Ä—É—à–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
     */
    destroy() {
        window.removeEventListener('popstate', this.boundHandlePopState);
        this.routes.clear();
        this.currentRoute = null;
        this.container = null;
        
        console.log('üó∫Ô∏è Router: –†–æ—É—Ç–µ—Ä —Ä–∞–∑—Ä—É—à–µ–Ω');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (typeof window !== 'undefined') {
    window.Router = Router;
}
