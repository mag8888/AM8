/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫ –∏ —Å—Ç–∏–ª–µ–π –∫–ª–µ—Ç–æ–∫
 */

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ –∫–ª–µ—Ç–∫–∏
 * @param {string} type - –¢–∏–ø –∫–ª–µ—Ç–∫–∏
 * @param {Object} cellData - –î–∞–Ω–Ω—ã–µ –∫–ª–µ—Ç–∫–∏
 * @returns {string} - –ò–∫–æ–Ω–∫–∞ emoji
 */
window.getIconForType = function(type, cellData) {
    if (cellData && cellData.icon) {
        return cellData.icon;
    }
    
    const defaultIcons = {
        // –í–Ω–µ—à–Ω–∏–π –∫—Ä—É–≥
        'money': 'üí∞',
        'business': 'üè†',
        'dream': '‚≠ê',
        'loss': 'üí∏',
        'charity': '‚ù§Ô∏è',
        
        // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥
        'green_opportunity': 'üíö',
        'yellow_payday': 'üí∞',
        'pink_expense': 'üõçÔ∏è',
        'blue_market': 'üè™',
        'orange_charity': '‚ù§Ô∏è',
        'purple_baby': 'üë∂',
        'black_loss': 'üí∏',
        
        // –ü—Ä–æ—á–∏–µ
        'unknown': '‚ùì'
    };
    
    return defaultIcons[type] || defaultIcons['unknown'];
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å CSS –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª—è –∏–∫–æ–Ω–∫–∏
 * @param {string} type - –¢–∏–ø –∫–ª–µ—Ç–∫–∏
 * @param {Object} cellData - –î–∞–Ω–Ω—ã–µ –∫–ª–µ—Ç–∫–∏
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
window.getIconStyleClass = function(type, cellData) {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å—Ç–∏–ª–µ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    return '';
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–µ—Ç–∫–∏ –¥–ª—è UI
 * @param {Object} cellData - –î–∞–Ω–Ω—ã–µ –∫–ª–µ—Ç–∫–∏
 * @returns {string} - HTML —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
 */
window.getCellDescription = function(cellData) {
    if (!cellData) {
        return '<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª–µ—Ç–∫–µ</p>';
    }
    
    let html = `<h4>${cellData.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h4>`;
    html += `<p class="cell-type">–¢–∏–ø: ${getCellTypeName(cellData.type)}</p>`;
    
    if (cellData.description) {
        html += `<p class="cell-description">${cellData.description}</p>`;
    }
    
    // –ë–∏–∑–Ω–µ—Å
    if (cellData.income !== undefined) {
        html += `<p class="cell-income">üí∞ –î–æ—Ö–æ–¥: $${formatNumber(cellData.income)}/–º–µ—Å</p>`;
    }
    
    if (cellData.cost !== undefined && cellData.cost > 0) {
        html += `<p class="cell-cost">üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: $${formatNumber(cellData.cost)}</p>`;
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ (–ë–∏—Ä–∂–∞)
    if (cellData.specialIncome) {
        html += `<p class="cell-special">‚≠ê –°–ø–µ—Ü. –¥–æ—Ö–æ–¥: $${formatNumber(cellData.specialIncome)}</p>`;
        html += `<p class="cell-condition">üé≤ –ü—Ä–∏ –±—Ä–æ—Å–∫–µ: 5 –∏–ª–∏ 6</p>`;
    }
    
    // –ü–æ—Ç–µ—Ä–∏
    if (cellData.lossPercent) {
        html += `<p class="cell-loss">‚ö†Ô∏è –ü–æ—Ç–µ—Ä—è: ${cellData.lossPercent}% –Ω–∞–ª–∏—á–Ω—ã—Ö</p>`;
    }
    
    if (cellData.lossType) {
        const lossText = cellData.lossType === 'min_business' ? '–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞' : '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞';
        html += `<p class="cell-loss">‚ö†Ô∏è –ü–æ—Ç–µ—Ä—è: ${lossText}</p>`;
    }
    
    // –†–∞—Å—Ö–æ–¥—ã
    if (cellData.minCost && cellData.maxCost) {
        html += `<p class="cell-expense">üí≥ –¢—Ä–∞—Ç–∞: $${formatNumber(cellData.minCost)}-$${formatNumber(cellData.maxCost)}</p>`;
    }
    
    // –†–µ–±–µ–Ω–æ–∫
    if (cellData.monthlyExpenseIncrease) {
        html += `<p class="cell-baby">üë∂ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤: +$${formatNumber(cellData.monthlyExpenseIncrease)}/–º–µ—Å</p>`;
    }
    
    // –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥)
    if (cellData.donationPercent) {
        html += `<p class="cell-charity">‚ù§Ô∏è –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ: ${cellData.donationPercent}% –¥–æ—Ö–æ–¥–∞</p>`;
        html += `<p class="cell-bonus">üéÅ –ë–æ–Ω—É—Å: ${cellData.bonusTurns} —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ö–æ–¥–∞</p>`;
    }
    
    // –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ
    if (cellData.bankruptcy) {
        html += `<p class="cell-warning">‚ö†Ô∏è –†–∏—Å–∫ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞!</p>`;
    }
    
    if (cellData.options && cellData.options.length > 0) {
        html += `<div class="cell-options">`;
        html += `<p><strong>–í–∞—Ä–∏–∞–Ω—Ç—ã:</strong></p>`;
        cellData.options.forEach((option, idx) => {
            html += `<p class="option-${idx + 1}">${idx + 1}. ${option.name}</p>`;
        });
        html += `</div>`;
    }
    
    return html;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∫–ª–µ—Ç–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
 * @param {string} type - –¢–∏–ø –∫–ª–µ—Ç–∫–∏
 * @returns {string} - –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
 */
function getCellTypeName(type) {
    const typeNames = {
        // –í–Ω–µ—à–Ω–∏–π –∫—Ä—É–≥
        'money': '–î–æ—Ö–æ–¥ –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
        'business': '–ë–∏–∑–Ω–µ—Å',
        'dream': '–ú–µ—á—Ç–∞',
        'loss': '–ü–æ—Ç–µ—Ä—è',
        'charity': '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        
        // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥
        'green_opportunity': '–ó–µ–ª–µ–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å',
        'yellow_payday': 'PayDay',
        'pink_expense': '–í—Å—è–∫–∞—è –≤—Å—è—á–∏–Ω–∞',
        'blue_market': '–†—ã–Ω–æ–∫',
        'orange_charity': '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        'purple_baby': '–†–µ–±–µ–Ω–æ–∫',
        'black_loss': '–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ',
        
        'unknown': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    };
    
    return typeNames[type] || typeNames['unknown'];
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
 * @param {number} num - –ß–∏—Å–ª–æ
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ
 */
function formatNumber(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}

console.log('‚úÖ Icon Helpers –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó)');
