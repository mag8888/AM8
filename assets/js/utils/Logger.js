/**
 * Logger v2.0.0
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
 */

class Logger {
    constructor(options = {}) {
        this.enabled = options.enabled !== false;
        this.level = options.level || 'info'; // debug, info, warn, error
        this.prefix = options.prefix || '';
        this.filter = options.filter || null; // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        
        this.levels = {
            debug: 0,
            info: 1,
            warn: 2,
            error: 3
        };
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @returns {boolean} –ù—É–∂–Ω–æ –ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
     */
    shouldLog(level, message) {
        if (!this.enabled) return false;
        if (this.levels[level] < this.levels[this.level]) return false;
        if (this.filter && !this.filter(level, message)) return false;
        return true;
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {*} data - –î–∞–Ω–Ω—ã–µ
     * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    formatMessage(level, message, data) {
        const timestamp = new Date().toLocaleTimeString();
        const prefix = this.prefix ? `[${this.prefix}]` : '';
        const levelIcon = this.getLevelIcon(level);
        
        let formatted = `${levelIcon} ${timestamp} ${prefix} ${message}`;
        
        if (data !== undefined) {
            if (typeof data === 'object') {
                formatted += `\n${JSON.stringify(data, null, 2)}`;
            } else {
                formatted += ` ${data}`;
            }
        }
        
        return formatted;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @returns {string} –ò–∫–æ–Ω–∫–∞
     */
    getLevelIcon(level) {
        const icons = {
            debug: 'üîç',
            info: '‚ÑπÔ∏è',
            warn: '‚ö†Ô∏è',
            error: '‚ùå'
        };
        return icons[level] || '‚ÑπÔ∏è';
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {*} data - –î–∞–Ω–Ω—ã–µ
     */
    debug(message, data) {
        if (this.shouldLog('debug', message)) {
            console.log(this.formatMessage('debug', message, data));
        }
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {*} data - –î–∞–Ω–Ω—ã–µ
     */
    info(message, data) {
        if (this.shouldLog('info', message)) {
            console.log(this.formatMessage('info', message, data));
        }
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {*} data - –î–∞–Ω–Ω—ã–µ
     */
    warn(message, data) {
        if (this.shouldLog('warn', message)) {
            console.warn(this.formatMessage('warn', message, data));
        }
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {*} data - –î–∞–Ω–Ω—ã–µ
     */
    error(message, data) {
        if (this.shouldLog('error', message)) {
            console.error(this.formatMessage('error', message, data));
        }
    }
    
    /**
     * –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ª–æ–≥–æ–≤
     * @param {string} label - –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
     * @param {Function} fn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    group(label, fn) {
        if (this.enabled) {
            console.group(label);
            try {
                fn();
            } finally {
                console.groupEnd();
            }
        } else {
            fn();
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {string} level - –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
     */
    setLevel(level) {
        if (this.levels.hasOwnProperty(level)) {
            this.level = level;
        }
    }
    
    /**
     * –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {boolean} enabled - –í–∫–ª—é—á–∏—Ç—å –ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    setEnabled(enabled) {
        this.enabled = enabled;
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
     * @param {Function} filter - –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     */
    setFilter(filter) {
        this.filter = filter;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –ª–æ–≥–≥–µ—Ä–æ–≤
const roomLogger = new Logger({
    prefix: 'Room',
    level: 'info', // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ 'warn' –∏–ª–∏ 'error'
    filter: (level, message) => {
        // –§–∏–ª—å—Ç—Ä—É–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const skipPatterns = [
            '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏',
            '–°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏',
            '–û—Ç–ª–∞–¥–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–∞',
            '–û–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∏—à–µ–∫'
        ];
        
        return !skipPatterns.some(pattern => message.includes(pattern));
    }
});

const gameLogger = new Logger({
    prefix: 'Game',
    level: 'info'
});

const apiLogger = new Logger({
    prefix: 'API',
    level: 'warn'
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof window !== 'undefined') {
    window.Logger = Logger;
    window.roomLogger = roomLogger;
    window.gameLogger = gameLogger;
    window.apiLogger = apiLogger;
}

if (typeof module !== 'undefined' && module.exports) {
    module.exports = Logger;
}
