#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Railway MongoDB
 */

const fs = require('fs');
const path = require('path');

const CONFIG = {
    // –§–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    FILES_TO_UPDATE: [
        'database/mongo.js',
        'config/database.js',
        'server.js'
    ],
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    ENV_VARS: [
        'MONGODB_URI',
        'MONGODB_DATABASE',
        'MONGODB_USERNAME',
        'MONGODB_PASSWORD'
    ]
};

class ConfigUpdater {
    constructor() {
        this.changes = [];
    }

    updateMongoConfig() {
        const filePath = path.join(__dirname, '..', 'database', 'mongo.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª database/mongo.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Railway MongoDB
        const newContent = content.replace(
            /const uri = process\.env\.MONGODB_URI \|\| process\.env\.MONGO_URL \|\| config\.MONGODB\.URI;/,
            `// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: Railway MongoDB -> MongoDB Atlas -> Config
const uri = process.env.RAILWAY_MONGODB_URI || 
            process.env.MONGODB_URI || 
            process.env.MONGO_URL || 
            config.MONGODB.URI;`
        );

        if (content !== newContent) {
            fs.writeFileSync(filePath, newContent);
            this.changes.push('database/mongo.js - –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω database/mongo.js');
        } else {
            console.log('‚ÑπÔ∏è database/mongo.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    updateDatabaseConfig() {
        const filePath = path.join(__dirname, '..', 'config', 'database.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª config/database.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Railway MongoDB
        const railwayConfig = `
// Railway MongoDB –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const RAILWAY_MONGODB_URI = process.env.RAILWAY_MONGODB_URI;
const RAILWAY_MONGODB_DATABASE = process.env.RAILWAY_MONGODB_DATABASE || 'energy_money_game';

module.exports = {
    MONGODB: {
        USERNAME: MONGODB_USERNAME,
        PASSWORD: MONGODB_PASSWORD,
        CLUSTER: MONGODB_CLUSTER,
        DATABASE: RAILWAY_MONGODB_DATABASE || MONGODB_DATABASE,
        OPTIONS: MONGODB_OPTIONS,
        URI: RAILWAY_MONGODB_URI || \`mongodb+srv://\${MONGODB_USERNAME}:\${MONGODB_PASSWORD}@\${MONGODB_CLUSTER}/\${MONGODB_DATABASE}?\${MONGODB_OPTIONS}\`
    },`;

        if (!content.includes('RAILWAY_MONGODB_URI')) {
            content = content.replace(
                'module.exports = {',
                railwayConfig
            );
            
            fs.writeFileSync(filePath, content);
            this.changes.push('config/database.js - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Railway MongoDB');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω config/database.js');
        } else {
            console.log('‚ÑπÔ∏è config/database.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    createRailwayConfig() {
        const configPath = path.join(__dirname, '..', 'railway.config.js');
        
        const config = `/**
 * Railway –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è MongoDB
 */

module.exports = {
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Railway
    env: {
        RAILWAY_MONGODB_URI: {
            description: 'MongoDB URI –æ—Ç Railway —Å–µ—Ä–≤–∏—Å–∞',
            required: true
        },
        RAILWAY_MONGODB_DATABASE: {
            description: '–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB –Ω–∞ Railway',
            default: 'energy_money_game'
        }
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    database: {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: Railway -> Atlas -> Local
        connectionPriority: [
            'RAILWAY_MONGODB_URI',
            'MONGODB_URI', 
            'MONGO_URL'
        ]
    }
};`;

        fs.writeFileSync(configPath, config);
        this.changes.push('railway.config.js - —Å–æ–∑–¥–∞–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª');
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω railway.config.js');
    }

    updateServerConfig() {
        const filePath = path.join(__dirname, '..', 'server.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª server.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const loggingCode = `
// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const dbUri = process.env.RAILWAY_MONGODB_URI || process.env.MONGODB_URI || process.env.MONGO_URL;
if (dbUri) {
    if (dbUri.includes('railway')) {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Railway MongoDB');
    } else if (dbUri.includes('mongodb.net')) {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è MongoDB Atlas');
    } else {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è MongoDB');
    }
} else {
    console.log('‚ö†Ô∏è Database: URI –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}`;

        if (!content.includes('Railway MongoDB')) {
            content = content.replace(
                'const app = express();',
                `const app = express();${loggingCode}`
            );
            
            fs.writeFileSync(filePath, content);
            this.changes.push('server.js - –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω server.js');
        } else {
            console.log('‚ÑπÔ∏è server.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    update() {
        console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Railway MongoDB...');
        
        this.updateMongoConfig();
        this.updateDatabaseConfig();
        this.createRailwayConfig();
        this.updateServerConfig();
        
        console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
        
        if (this.changes.length > 0) {
            console.log('\nüìù –í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:');
            this.changes.forEach(change => console.log(`  - ${change}`));
        }
        
        console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('1. –°–æ–∑–¥–∞–π—Ç–µ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway');
        console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        console.log('   - RAILWAY_MONGODB_URI');
        console.log('   - RAILWAY_MONGODB_DATABASE');
        console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: node scripts/migrateToRailwayMongo.js');
        console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    }
}

if (require.main === module) {
    const updater = new ConfigUpdater();
    updater.update();
}

module.exports = ConfigUpdater;

/**
 * –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Railway MongoDB
 */

const fs = require('fs');
const path = require('path');

const CONFIG = {
    // –§–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    FILES_TO_UPDATE: [
        'database/mongo.js',
        'config/database.js',
        'server.js'
    ],
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    ENV_VARS: [
        'MONGODB_URI',
        'MONGODB_DATABASE',
        'MONGODB_USERNAME',
        'MONGODB_PASSWORD'
    ]
};

class ConfigUpdater {
    constructor() {
        this.changes = [];
    }

    updateMongoConfig() {
        const filePath = path.join(__dirname, '..', 'database', 'mongo.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª database/mongo.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Railway MongoDB
        const newContent = content.replace(
            /const uri = process\.env\.MONGODB_URI \|\| process\.env\.MONGO_URL \|\| config\.MONGODB\.URI;/,
            `// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: Railway MongoDB -> MongoDB Atlas -> Config
const uri = process.env.RAILWAY_MONGODB_URI || 
            process.env.MONGODB_URI || 
            process.env.MONGO_URL || 
            config.MONGODB.URI;`
        );

        if (content !== newContent) {
            fs.writeFileSync(filePath, newContent);
            this.changes.push('database/mongo.js - –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω database/mongo.js');
        } else {
            console.log('‚ÑπÔ∏è database/mongo.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    updateDatabaseConfig() {
        const filePath = path.join(__dirname, '..', 'config', 'database.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª config/database.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Railway MongoDB
        const railwayConfig = `
// Railway MongoDB –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const RAILWAY_MONGODB_URI = process.env.RAILWAY_MONGODB_URI;
const RAILWAY_MONGODB_DATABASE = process.env.RAILWAY_MONGODB_DATABASE || 'energy_money_game';

module.exports = {
    MONGODB: {
        USERNAME: MONGODB_USERNAME,
        PASSWORD: MONGODB_PASSWORD,
        CLUSTER: MONGODB_CLUSTER,
        DATABASE: RAILWAY_MONGODB_DATABASE || MONGODB_DATABASE,
        OPTIONS: MONGODB_OPTIONS,
        URI: RAILWAY_MONGODB_URI || \`mongodb+srv://\${MONGODB_USERNAME}:\${MONGODB_PASSWORD}@\${MONGODB_CLUSTER}/\${MONGODB_DATABASE}?\${MONGODB_OPTIONS}\`
    },`;

        if (!content.includes('RAILWAY_MONGODB_URI')) {
            content = content.replace(
                'module.exports = {',
                railwayConfig
            );
            
            fs.writeFileSync(filePath, content);
            this.changes.push('config/database.js - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Railway MongoDB');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω config/database.js');
        } else {
            console.log('‚ÑπÔ∏è config/database.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    createRailwayConfig() {
        const configPath = path.join(__dirname, '..', 'railway.config.js');
        
        const config = `/**
 * Railway –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è MongoDB
 */

module.exports = {
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Railway
    env: {
        RAILWAY_MONGODB_URI: {
            description: 'MongoDB URI –æ—Ç Railway —Å–µ—Ä–≤–∏—Å–∞',
            required: true
        },
        RAILWAY_MONGODB_DATABASE: {
            description: '–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB –Ω–∞ Railway',
            default: 'energy_money_game'
        }
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    database: {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: Railway -> Atlas -> Local
        connectionPriority: [
            'RAILWAY_MONGODB_URI',
            'MONGODB_URI', 
            'MONGO_URL'
        ]
    }
};`;

        fs.writeFileSync(configPath, config);
        this.changes.push('railway.config.js - —Å–æ–∑–¥–∞–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª');
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω railway.config.js');
    }

    updateServerConfig() {
        const filePath = path.join(__dirname, '..', 'server.js');
        
        if (!fs.existsSync(filePath)) {
            console.log('‚ö†Ô∏è –§–∞–π–ª server.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        let content = fs.readFileSync(filePath, 'utf8');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const loggingCode = `
// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const dbUri = process.env.RAILWAY_MONGODB_URI || process.env.MONGODB_URI || process.env.MONGO_URL;
if (dbUri) {
    if (dbUri.includes('railway')) {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Railway MongoDB');
    } else if (dbUri.includes('mongodb.net')) {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è MongoDB Atlas');
    } else {
        console.log('üóÑÔ∏è Database: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è MongoDB');
    }
} else {
    console.log('‚ö†Ô∏è Database: URI –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}`;

        if (!content.includes('Railway MongoDB')) {
            content = content.replace(
                'const app = express();',
                `const app = express();${loggingCode}`
            );
            
            fs.writeFileSync(filePath, content);
            this.changes.push('server.js - –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω server.js');
        } else {
            console.log('‚ÑπÔ∏è server.js —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
    }

    update() {
        console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Railway MongoDB...');
        
        this.updateMongoConfig();
        this.updateDatabaseConfig();
        this.createRailwayConfig();
        this.updateServerConfig();
        
        console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
        
        if (this.changes.length > 0) {
            console.log('\nüìù –í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:');
            this.changes.forEach(change => console.log(`  - ${change}`));
        }
        
        console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('1. –°–æ–∑–¥–∞–π—Ç–µ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway');
        console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        console.log('   - RAILWAY_MONGODB_URI');
        console.log('   - RAILWAY_MONGODB_DATABASE');
        console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: node scripts/migrateToRailwayMongo.js');
        console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    }
}

if (require.main === module) {
    const updater = new ConfigUpdater();
    updater.update();
}

module.exports = ConfigUpdater;
