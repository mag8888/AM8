#!/usr/bin/env node

/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Railway MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 */

class RailwayMongoDiagnostic {
    constructor() {
        this.railwayMongoUri = 'mongodb://mongo:XFAMLKzevqVGJxxIXcXLOCSonYXKtWxT@mongodb.railway.internal:27017';
        this.railwayMongoDb = 'energy_money_game';
    }

    async testConnection() {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway MongoDB...');
        
        try {
            const { MongoClient } = require('mongodb');
            
            console.log('üì° URI:', this.railwayMongoUri);
            console.log('üóÑÔ∏è Database:', this.railwayMongoDb);
            
            const client = new MongoClient(this.railwayMongoUri);
            
            console.log('üîå –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
            await client.connect();
            console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!');
            
            const db = client.db(this.railwayMongoDb);
            console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞!');
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
            const collections = await db.listCollections().toArray();
            console.log('üì¶ –ö–æ–ª–ª–µ–∫—Ü–∏–∏:', collections.map(c => c.name));
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å
            const testCollection = db.collection('test_connection');
            await testCollection.insertOne({ 
                test: true, 
                timestamp: new Date(),
                message: 'Railway MongoDB connection test'
            });
            console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ
            const result = await testCollection.findOne({ test: true });
            console.log('‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã —Ä–∞–±–æ—Ç–∞–µ—Ç!', result ? '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã' : '–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            
            // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            await testCollection.deleteOne({ test: true });
            console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            
            await client.close();
            console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
            
            return true;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway MongoDB:', error.message);
            
            if (error.message.includes('ENOTFOUND')) {
                console.log('üîç –ü—Ä–æ–±–ª–µ–º–∞: DNS –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ mongodb.railway.internal');
                console.log('üí° –†–µ—à–µ–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Railway MongoDB —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω');
            } else if (error.message.includes('ECONNREFUSED')) {
                console.log('üîç –ü—Ä–æ–±–ª–µ–º–∞: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ');
                console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway –∞–∫—Ç–∏–≤–µ–Ω');
            } else if (error.message.includes('authentication')) {
                console.log('üîç –ü—Ä–æ–±–ª–µ–º–∞: –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
                console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ username/password –≤ URI');
            }
            
            return false;
        }
    }

    generateFixInstructions() {
        console.log('\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:');
        console.log('=' .repeat(50));
        
        console.log('\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Railway MongoDB —Å–µ—Ä–≤–∏—Å:');
        console.log('   - –ó–∞–π–¥–∏—Ç–µ –≤ Railway Dashboard');
        console.log('   - –ù–∞–π–¥–∏—Ç–µ MongoDB —Å–µ—Ä–≤–∏—Å');
        console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω (–∑–µ–ª–µ–Ω—ã–π —Å—Ç–∞—Ç—É—Å)');
        
        console.log('\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        console.log('   - –í –æ—Å–Ω–æ–≤–Ω–æ–º —Å–µ—Ä–≤–∏—Å–µ AM8');
        console.log('   - –î–æ–ª–∂–Ω—ã –±—ã—Ç—å:');
        console.log(`     RAILWAY_MONGODB_URI = ${this.railwayMongoUri}`);
        console.log(`     RAILWAY_MONGODB_DATABASE = ${this.railwayMongoDb}`);
        
        console.log('\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway MongoDB:');
        console.log('   - –í Railway Dashboard ‚Üí MongoDB —Å–µ—Ä–≤–∏—Å ‚Üí Logs');
        console.log('   - –ò—â–∏—Ç–µ –æ—à–∏–±–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
        
        console.log('\n4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:');
        console.log('   - –°–Ω–∞—á–∞–ª–∞ MongoDB —Å–µ—Ä–≤–∏—Å');
        console.log('   - –ü–æ—Ç–æ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å AM8');
        
        console.log('\n5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç—å Railway:');
        console.log('   - MongoDB –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–æ–º –∂–µ –ø—Ä–æ–µ–∫—Ç–µ');
        console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π URI (mongodb.railway.internal)');
    }

    async run() {
        console.log('üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Railway MongoDB');
        console.log('üìÖ –í—Ä–µ–º—è:', new Date().toISOString());
        console.log('=' .repeat(60));
        
        const isConnected = await this.testConnection();
        
        if (isConnected) {
            console.log('\nüéâ Railway MongoDB —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
            console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
            console.log('üí° –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Railway MongoDB');
        } else {
            console.log('\n‚ùå Railway MongoDB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            this.generateFixInstructions();
        }
    }
}

if (require.main === module) {
    const diagnostic = new RailwayMongoDiagnostic();
    diagnostic.run()
        .then(() => {
            console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
            process.exit(1);
        });
}

module.exports = RailwayMongoDiagnostic;
