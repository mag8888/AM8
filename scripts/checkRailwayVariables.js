#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway
 */

class RailwayVariableChecker {
    constructor() {
        this.requiredVars = [
            'RAILWAY_MONGODB_URI',
            'RAILWAY_MONGODB_DATABASE',
            'MONGODB_URI',
            'MONGODB_DATABASE',
            'MONGO_URL'
        ];
    }

    checkVariables() {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway MongoDB');
        console.log('=' .repeat(60));
        
        console.log('\nüìã –¢–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
        
        let hasRailwayVars = false;
        let hasOldVars = false;
        
        for (const varName of this.requiredVars) {
            const value = process.env[varName];
            if (value) {
                const isRailway = varName.startsWith('RAILWAY_');
                const isOld = !isRailway;
                
                if (isRailway) hasRailwayVars = true;
                if (isOld) hasOldVars = true;
                
                const displayValue = this.maskValue(value);
                console.log(`  ‚úÖ ${varName}: ${displayValue}`);
            } else {
                console.log(`  ‚ùå ${varName}: NOT SET`);
            }
        }
        
        console.log('\nüéØ –ê–Ω–∞–ª–∏–∑:');
        
        if (hasRailwayVars) {
            console.log('  ‚úÖ Railway MongoDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã');
        } else {
            console.log('  ‚ùå Railway MongoDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ù–ï –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        if (hasOldVars) {
            console.log('  ‚ö†Ô∏è –°—Ç–∞—Ä—ã–µ MongoDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã (–º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å)');
        } else {
            console.log('  ‚ÑπÔ∏è –°—Ç–∞—Ä—ã–µ MongoDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        this.generateRecommendations(hasRailwayVars, hasOldVars);
    }

    maskValue(value) {
        if (!value) return 'NOT SET';
        
        // –ú–∞—Å–∫–∏—Ä—É–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (value.includes('mongodb://') || value.includes('mongodb+srv://')) {
            return value.replace(/(mongodb[+]?srv?:\/\/)([^:]+):([^@]+)@/, '$1***:***@');
        }
        
        if (value.length > 20) {
            return value.substring(0, 10) + '...' + value.substring(value.length - 5);
        }
        
        return value;
    }

    generateRecommendations(hasRailwayVars, hasOldVars) {
        console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        
        if (!hasRailwayVars) {
            console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Railway MongoDB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
            console.log('\nüîß –†–µ—à–µ–Ω–∏–µ:');
            console.log('1. –°–æ–∑–¥–∞–π—Ç–µ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway');
            console.log('2. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å:');
            console.log('   - RAILWAY_MONGODB_URI');
            console.log('   - RAILWAY_MONGODB_DATABASE');
            console.log('3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å');
        }
        
        if (hasRailwayVars && hasOldVars) {
            console.log('\n‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –µ—Å—Ç—å –∏ —Å—Ç–∞—Ä—ã–µ, –∏ –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
            console.log('\nüîß –†–µ—à–µ–Ω–∏–µ:');
            console.log('1. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ MongoDB Atlas');
            console.log('2. –û—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
            console.log('3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å');
        }
        
        if (hasRailwayVars && !hasOldVars) {
            console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            console.log('\nüîß –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:');
            console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å RAILWAY_MONGODB_URI');
            console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway –∑–∞–ø—É—â–µ–Ω');
            console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ MongoDB —Å–µ—Ä–≤–∏—Å–∞');
        }
        
        this.generateQuickFix();
    }

    generateQuickFix() {
        console.log('\nüöÄ –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:');
        console.log('=' .repeat(40));
        
        console.log('\n1. –°–æ–∑–¥–∞–π—Ç–µ MongoDB —Å–µ—Ä–≤–∏—Å –Ω–∞ Railway:');
        console.log('   - Railway Dashboard ‚Üí "+ New" ‚Üí "Database" ‚Üí "MongoDB"');
        
        console.log('\n2. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å:');
        console.log('   RAILWAY_MONGODB_URI=<URI –∏–∑ MongoDB —Å–µ—Ä–≤–∏—Å–∞>');
        console.log('   RAILWAY_MONGODB_DATABASE=energy_money_game');
        
        console.log('\n3. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å):');
        console.log('   MONGO_URL');
        console.log('   MONGODB_URI');
        console.log('   MONGODB_DATABASE');
        
        console.log('\n4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å');
        
        console.log('\nüìù –ö–æ–º–∞–Ω–¥—ã Railway CLI:');
        console.log('   railway variables set RAILWAY_MONGODB_URI="<–Ω–æ–≤—ã–π_URI>"');
        console.log('   railway variables set RAILWAY_MONGODB_DATABASE="energy_money_game"');
        console.log('   railway variables delete MONGO_URL');
        console.log('   railway variables delete MONGODB_URI');
    }

    run() {
        this.checkVariables();
    }
}

if (require.main === module) {
    const checker = new RailwayVariableChecker();
    checker.run();
}

module.exports = RailwayVariableChecker;

