/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∫–æ–ª–æ–¥ –≤ MongoDB
 */

const mongoose = require('mongoose');
const { Deck, Card } = require('../models/CardModel');

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–ª–æ–¥—ã
const DEFAULT_DECKS = [
    {
        id: 'deal',
        name: '–ú–∞–ª–∞—è —Å–¥–µ–ª–∫–∞',
        drawPile: [],
        discardPile: []
    },
    {
        id: 'big_deal',
        name: '–ë–æ–ª—å—à–∏–µ —Å–¥–µ–ª–∫–∏',
        drawPile: [],
        discardPile: []
    },
    {
        id: 'expenses',
        name: '–†–∞—Å—Ö–æ–¥—ã',
        drawPile: [],
        discardPile: []
    },
    {
        id: 'market',
        name: '–†—ã–Ω–æ–∫',
        drawPile: [],
        discardPile: []
    }
];

async function initializeCards() {
    try {
        console.log('üÉè –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∫–æ–ª–æ–¥ –≤ MongoDB...');
        
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
        const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/aura_money';
        await mongoose.connect(mongoUri);
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–æ–ª–æ–¥—ã
        const existingDecks = await Deck.find({});
        if (existingDecks.length > 0) {
            console.log('‚ö†Ô∏è –ö–∞—Ä—Ç–æ—á–Ω—ã–µ –∫–æ–ª–æ–¥—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–ª–æ–¥—ã
        const createdDecks = await Promise.all(DEFAULT_DECKS.map(async (deckData) => {
            const deck = new Deck(deckData);
            return await deck.save();
        }));
        
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdDecks.length} –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∫–æ–ª–æ–¥:`, 
            createdDecks.map(d => `${d.name} (${d.id})`).join(', '));
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∫–æ–ª–æ–¥:', error);
        throw error;
    } finally {
        await mongoose.disconnect();
        console.log('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
if (require.main === module) {
    initializeCards()
        .then(() => {
            console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∫–æ–ª–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { initializeCards };
